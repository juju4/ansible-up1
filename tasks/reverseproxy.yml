---

- name: Debian | Ensure required apache modules are loaded
  community.general.apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - headers
    - proxy
    - proxy_http
  when: up1_reverseproxy is defined and up1_reverseproxy == 'apache' and ansible_os_family == 'Debian'
  notify:
    - Restart apache

- name: Install up1 nginx reverseproxy configuration
  ansible.builtin.template:
    src: up1-nginx.conf.j2
    dest: "{{ nginx_sitedir }}/up1.conf"
    mode: '0644'
    backup: yes
  when: up1_reverseproxy is defined and up1_reverseproxy == 'nginx'
  notify:
    - Restart nginx

- name: Debian | enable nginx reverseproxy
  ansible.builtin.file:
    src: "{{ nginx_sitedir }}/up1.conf"
    dest: "/etc/nginx/sites-enabled/up1.conf"
    mode: '0644'
    state: 'link'
  when: up1_reverseproxy is defined and up1_reverseproxy == 'nginx' and ansible_os_family == 'Debian'
  notify:
    - Restart nginx
  register: nginxcfg

- name: Check nginx configuration
  ansible.builtin.command:
    cmd: "nginx -t"  # noqa no-handler
  changed_when: false
  when: nginxcfg.changed

- name: Install up1 apache reverseproxy configuration
  ansible.builtin.template:
    src: up1-apache.conf.j2
    dest: "{{ apache_sitedir }}/up1.conf"
    mode: '0644'
    backup: yes
  when: up1_reverseproxy is defined and up1_reverseproxy == 'apache'

- name: Debian | enable up1 apache reverseproxy configuration
  ansible.builtin.file:
    src: "{{ apache_sitedir }}/up1.conf"
    dest: "/etc/apache2/sites-enabled/up1.conf"
    mode: '0644'
    state: 'link'
  when: up1_reverseproxy is defined and up1_reverseproxy == 'apache' and ansible_os_family == 'Debian'
  notify:
    - Restart apache
  register: apachecfg

# https://github.com/ansible/ansible/issues/16612
- name: RedHat selinux facts
  when: ansible_os_family == "RedHat"
  block:
    - name: Debug | ansible_selinux
      ansible.builtin.debug:
        var: ansible_selinux
    - name: RedHat7- | ensure selinux dependency is present
      ansible.builtin.yum:
        name:
          - libselinux-python
          - libsemanage-python
          - policycoreutils-python
        state: present
      register: pkg_result
      until: pkg_result is success
      when: ansible_distribution_major_version | int < 8

    - name: RedHat8+ | Ensure selinux dependencies are present
      ansible.builtin.package:
        name:
          - python3-libselinux
          - python3-libsemanage
          - python3-policycoreutils
        state: present
      register: pkg_result
      until: pkg_result is success
      when: ansible_distribution_major_version | int >= 8

    - name: Recollect ansible facts
      ansible.builtin.setup:
    - name: Debug | ansible_selinux
      ansible.builtin.debug:
        var: ansible_selinux

- name: RedHat selinux
  when: >
    ansible_os_family == "RedHat" and
    ansible_selinux.status is defined and
    ansible_selinux.status != 'disabled'
  block:
    - name: RedHat | Allow proxy to network connect in selinux
      ansible.posix.seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes

    # https://wiki.centos.org/HowTos/SELinux#head-ad837f60830442ae77a81aedd10c20305a811388
    - name: RedHat | Allow httpd to listen to unusual ports
      community.general.seport:
        ports: "{{ up1_serverlisten }}"
        proto: tcp
        setype: http_port_t
        state: present
      when: up1_serverlisten != 80 and up1_serverlisten != 443

- name: Check apache configuration
  ansible.builtin.command:
    cmd: "{{ apache_check }} configtest"  # noqa no-handler
  changed_when: false
  when: apachecfg.changed
